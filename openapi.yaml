openapi: 3.0.3
info:
  title: Qfrency Text-to-Speech Cloud API
  description: |
    The Qfrency TTS Cloud API definition and some examples on its usage based on the OpenAPI 3.0 specification.

    # Introduction
    Qfrency is a multilingual Text-to-Speech system which provides both cloud based
    Application Programming Interfaces (API), which is this online service, as well
    as a Software Development Kit (SDK) for synthesizing text into speech in all 11 
    official South African languages. At the moment the service only provides a synchronous
    HTTP Representational State Transfer (REST) interface and does not support the
    Speech Synthesis Markup Language (SSML), but that will change soon.

    For more information also see our website at [qfrency.com](https://www.qfency.com).

    # Voices
    We currently provide a mixture of Hidden Markov Model (HMM) based voices and
    Deep Neural Network (DNN) based voices. The HMM voices are a bit faster than the DNN
    voices, but they also sound more robotic in terms of their tone of delivery. The
    DNN voices approach human naturalness in speech quality.

    We have voices in all 11 official South African languages, with a mixture between
    male and female.

    | Language              | Voice     | Synthesis technique | Identifier           | Gender | Age   |
    |-----------------------|-----------|---------------------|----------------------|--------|-------|
    | Afrikaans             | Bennie    | HMM                 | afr-ZA-hmm-bennie    | Male   | Child |
    | Afrikaans             | Kobus     | HMM                 | afr-ZA-hmm-kobus     | Male   | Adult |
    | Afrikaans             | Kobus     | DNN                 | afr-ZA-dnn-kobus     | Male   | Adult |
    | Afrikaans             | Maryna    | HMM                 | afr-ZA-hmm-maryna    | Female | Adult |
    | South African English | Candice   | HMM                 | eng-ZA-hmm-candice   | Female | Adult |
    | South African English | Tim       | HMM                 | eng-ZA-hmm-tim       | Male   | Adult |
    | South African English | Tim       | DNN                 | eng-ZA-dnn-tim       | Male   | Adult |
    | isiNdebele            | Banele    | HMM                 | nbl-ZA-hmm-banele    | Male   | Adult |
    | isiXhosa              | Vuyo      | HMM                 | xho-ZA-hmm-vuyo      | Male   | Adult |
    | isiXhosa              | Zoleka    | HMM                 | xho-ZA-dnn-zoleka    | Female | Adult |
    | isiZulu               | Lindiwe   | HMM                 | zul-ZA-hmm-lindiwe   | Female | Adult |
    | isiZulu               | Sifiso    | HMM                 | zul-ZA-hmm-sifiso    | Male   | Adult |
    | isiZulu               | Sifiso    | DNN                 | zul-ZA-dnn-sifiso    | Male   | Adult |
    | Sepedi                | Mmapitsi  | HMM                 | nso-ZA-hmm-mmapitsi  | Female | Adult |
    | Sepedi                | Tshepo    | HMM                 | nso-ZA-hmm-tshepo    | Male   | Adult |
    | Sesotho               | Kamohelo  | HMM                 | sot-ZA-hmm-kamohelo  | Female | Adult |
    | Setswana              | Lethabo   | HMM                 | tsn-ZA-hmm-lethabo   | Female | Adult |
    | siSwati               | Temaswati | HMM                 | ssw-ZA-hmm-temaswati | Female | Adult |
    | Tshivenda             | Rabelani  | HMM                 | ven-ZA-hmm-rabelani  | Male   | Adult |
    | Xitsonga              | Sasekani  | HMM                 | tso-ZA-hmm-sasekani  | Female | Adult |

    Samples of all the voices can also be generated on the demo page on our website, [https://www.qfrency.com/demo](https://www.qfrency.com/demo).

    # Authorization
    Authorization is achieved by means of an Account Identifier (`AccountID`) and API keys.
    A client receives a unique `AccountID` and can request as many API keys as desired.
    Different API keys can for example be used for different projects or applications of the same
    client, thereby having more granular control of the usage.

    The client adds synthesis tokens to their account, and can decide how these tokens must be
    distributed between their API keys. There are different tokens for HMM and DNN voices, as these
    voices use different amounts of service resources. Tokens correspond to a character count, and
    for example with 10 tokens on an API key you can synthesize an utterance with 10 characters.
    The number of characters in an utterance is the complete grapheme length of the text in
    the utterance and therefore includes all punctuation and mark-up (if any).

    All the API is expected to be authorised with an API key in the header of the request with
    the field name `X-API-KEY` and field value being the API key, for example:

    `X-API-KEY: 48afa89b-dfd2-4e6d-a346-0b2e2a2c35c3`

    The **Accounts** APIs are expected to be authorised with the client's `AccountID` in the
    header of the request with the field name `X-ACCOUNT-KEY` and field value being the
    `AccountID`, for example:

    `X-ACCOUNT-KEY: 48afa89b-dfd2-4e6d-a346-0b2e2a2c35c3`

    # Synthesis

    There are currently two REST APIs for synthesis:
    - [GET https://tts.qfrency.com/api/v1/synthesize](#get-/v1/synthesize), and
    - [POST https://tts.qfrency.com/api/v1/synthesize](#post-/v1/synthesize)

    The reason for this is that while the `GET` call is a more natural API for TTS, it is limited by the HTTP
    specification with regards to the size of the header and should not be used for text that is longer
    than about 1000 characters. For long text the `POST` API must be used.

    ## Audio
    All audio objects are returned in a WAV formatted (https://en.wikipedia.org/wiki/WAV) file which has
    been base64-encoded. The reason for the base64-encoding is that the JSON specification (which is the
    format of all returned objects from this service) does not directly support binary data and therefore
    the binary audio data is first wrapped into a WAV file and then Base64 encoded as a string.

    After base64-decoding the string back to binary data it can be written to a file or the WAV header can
    be stripped (the Qfrency TTS engine always creates a header that is 44 bytes long) and the
    Linear Pulse-code modulation (PCM) data can be converted to another format from it's 16 bits 
    per sample (signed, little-endian) WAV format if desired.

    ## Sample-rate
    Each voice has a natural sample-rate for the synthesized speech, which can be found with a call to
    either [https://tts.qfrency.com/api/v1/voices](#get-/v1/voices) or [https://tts.qfrency.com/api/v1/voices/{voice-code}](#get-/v1/voice/-voice-code-)
    if you have the voice's identifier (which can be found in the response of the first call or per the [voice table](#overview--voices)).

    If no sample-rate argument is passed to the synthesis calls ([GET https://tts.qfrency.com/api/v1/synthesize](#get-/v1/synthesize)
    or [POST https://tts.qfrency.com/api/v1/synthesize](#post-/v1/synthesize)) then the returned synthesize
    audio will be in the voice's natural sample rate. The sample-rate will also be set correctly in the 
    returned audio WAV header.

    ## Decoding the audio example

    The synthesis APIs return an encoded audio object in a JSON string as follows:
 
    ```json
    {
        wav_64: "UklGRuTzAABXQVZFZm10IBAAAAABAAEAwF0AAIC7AAACABAAZGF0YcDzAADm/+b/m/ /k/+f/7/94\nAA8A4f/l/6f/PgA5ACQAGgDv/wwA5f9XAOj/0f8eAPD/BQDp/xgAv/ 8eAAgA5/8NAPD/GAADADIA\nEAABAPb/JgAQACUAIgARACAAGAAGAAMADQAKABMAB wAjABAAIwD7/wYADAAAAAwA+v8AAAAAGgAP\nAA0ADQD..."
    }
    ```

    For the sake of the examples the above returned response is saved in a file named "synthesis_response.json".
    
    ### Linux 
    On Linux systems the JSON string can be parsed with various tools and in this example we use **jq**
    from https://stedolan.github.io/jq/.
 
    First the `wav_64` field is extracted from the string using **jq**, next it as piped to the **base64**
    utility and decoded and finaly the decoded binary data is written to file:

    ```bash
    $ jq -r '.wav_64' synthesis_response.json | base64 -d > result.wav
    ```
        

    # Client libraries
    The OpenAPI specification for this API is [available](https://raw.githubusercontent.com/qfrency/tts-cloud-api/main/openapi.yaml) 
    and can be used to generate client implementations in various programming  languages using OpenAPI 
    generators (we recommend the one here: https://openapi-generator.tech/).



  version: 1.0.0
  license:
    name: Apache 2.0 (Qfrency Cloud TTS API License)
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Contact
    email: info@qfrency.com
servers:
  - url: https://tts.qfrency.com/api
    description: >-
      Qfrency TTS cloud API production server.
tags:
  - name: Versions
    description: >-
      API version information.
  - name: Voices
    description: >-
      Information about voices available for synthesis.
    externalDocs:
      description: Find out more
      url: 'http://tts.qfrency.com/voices'
  - name: Synthesis
    description: >-
      Text-to-speech synthesis operations.
  - name: Accounts
    description: >-
      Information about API keys and accounts.
paths:
  /v1/api-keys:
    get:
      security:
        - QfrencyTTSAccountKeyAuth: []
      tags:
        - Accounts
      operationId: listAccountV1
      summary: >-
        List account information
      description: >-
        Get information about the account of the ```AccountID``` used in the
        authorization of this endpoint.
      responses:
        '200':
          description: >-
            Account information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountV1"
              example:
                Account Info:
                  AccountID: 443b5429-e0cd-4ba6-b5bb-100f816ca7b1
                  Name: Dr. David Bowman
                  Email: dbowman@csl.illinois.edu
                  CharCountDNN: 42000
                  CharCountHMM: 2010
                  API-Keys:
                    - 8ed312a7-33dd-4e36-a1f3-dd87d8e82ed3
                    - c0c87e6d-ea96-4f75-b98a-97025830bc47
                    - 77b01d64-416d-477b-8c92-0aabc8314f3e
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 401
                  message: No X-ACCOUNT-KEY in header
  /v1/api-key/{api-key}:
    get:
      security:
        - QfrencyTTSAccountKeyAuth: []
      tags:
        - Accounts
      operationId: listApiKeyV1
      summary: >-
        List API key information
      description: >-
        Get information about the given API key.
      parameters:
        - name: api-key
          in: path
          description: >-
            The API key for which the information is requested.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: >-
            API-Key information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiKeyV1"
              example:
                API-Key Info:
                  API-Key: 77b01d64-416d-477b-8c92-0aabc8314f3e
                  Name: Application 9000
                  CharCountDNN: 2001
                  CharCountHMM: 42
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 400
                  message: API-key ('c0c87e6d-ea96-4f75-b98a-97025830bc48') not found
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 401
                  message: No X-ACCOUNT-KEY in header
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 403
                  message: >-
                    No right to access this API-Key
                    ('c0c87e6d-ea96-4f75-b98a-97025830bc48') information
  /versions:
    get:
      security:
        - QfrencyTTSApiKeyAuth: []
      tags:
        - Versions
      operationId: listVersions
      summary: List API versions
      description: >-
        Get a list of version objects.
      responses:
        '200':
          description: >-
            A list of version objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/versions"
              example:
                versions:
                  - id: v1
                    links:
                      - href: 'http://tts.qfrency.com/api/v1/'
                        rel: self
                    status: CURRENT
                    updated: '2021-02-27T09:18:44Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 401
                  message: No X-API-KEY in header
  /v1/voices:
    get:
      security:
        - QfrencyTTSApiKeyAuth: []
      tags:
        - Voices
      operationId: voicesV1
      summary: List of voices
      description: >-
        Get a list of voices, and their attributes,
        available for synthesis requests.
      responses:
        '200':
          description: >-
            A List of voices and their attributes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/voicesV1"
              example:
                voices:
                  - age: adult
                    country-code: ZA
                    description: >-
                      isiZulu female voice with HMM acoustic models
                      and mixed-excitation vocoder
                    gender: female
                    lang-code: zul
                    language: isizulu
                    name: Lindiwe
                    sample-rate: 16000
                    technique: HMM
                    voice-code: zul-ZA-hmm-lindiwe
                  - age: adult
                    country-code: ZA
                    description: >-
                      Sepedi male voice with HMM acoustic models and
                      mixed-excitation vocoder
                    gender: male
                    lang-code: nso
                    language: epedi
                    name: Tshepo
                    sample-rate: 16000
                    technique: HMM
                    voice-code: nso-ZA-hmm-tshepo
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 401
                  message: No X-API-KEY in header
  /v1/voice/{voice-code}:
    get:
      security:
        - QfrencyTTSApiKeyAuth: []
      tags:
        - Voices
      operationId: voiceV1
      summary: Voice attributes
      description: >-
        Get the attributes of a specific voice identified by
        the given voice code.
      parameters:
        - name: voice-code
          in: path
          description: >-
            The voice code of the voice for which the
            attributes are requested.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The attributes of the specific voice.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/voiceV1"
              example:
                voices:
                  age: adult
                  country-code: ZA
                  description: >-
                    isiZulu female voice with HMM acoustic models and
                    mixed-excitation vocoder
                  gender: female
                  lang-code: zul
                  language: isizulu
                  name: Lindiwe
                  sample-rate: 16000
                  technique: HMM
                  voice-code: zul-ZA-hmm-lindiwe
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 400
                  message: No voice found for voice-code 'eng-ZA-dnn-hal'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 401
                  message: No X-API-KEY in header
  /v1/synthesize:
    get:
      security:
        - QfrencyTTSApiKeyAuth: []
      tags:
        - Synthesis
      operationId: synthesizeGetV1
      summary: Synthesize text
      description: >-
        Synthesize a given text string with a specific voice into
        speech with the given parameters.
      parameters:
        - name: X-API-Key
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: voice-code
          in: query
          description: >-
            The voice code of the voice to be used for synthesis,
            and by implication the also the language.
          required: true
          schema:
            type: string
        - name: text
          in: query
          description: >-
            The text to be synthesized (in the language of the voice).
          required: true
          schema:
            type: string
        - name: sample-rate
          in: query
          description: >-
            The desired sample-rate of the resulting synthesized speech audio.
            Each voice has a natural sample-rate, this will then be up- or down-sampled
            to the requested rate. The sample-rate must be given in Hertz.
            If left out then the synthesized audio sample-rate will be at the voice
            natural sample-rate.
          required: false
          allowEmptyValue: false
          style: form
          explode: false
          schema:
            type: integer
            format: int32
            minimum: 8000
            maximum: 32000
            default: Voice natural sample-rate
        - name: auto-segmentation
          in: query
          description: >-
            Automatically split the input text into sentences (if any sentance
            boundaries are found). Each sentence is then synthesized seperately
            and the resulting speech audio is concatenated with all the other
            sentence's speech audio and returned. Default is `true`. If the
            segmentation is wrong then switch this off and synthesize utterances one
            by one.
          required: false
          allowEmptyValue: false
          style: form
          explode: false
          schema:
            type: boolean
            default: true
        - name: auto-clean
          in: query
          description: >-
            Automatically clean the text. This involves many text processing operations
            to for example remove double new lines, replace escaped new lines etc. This
            might result in cleaner text for the TTS engine. If your text is from an unknown
            source then it is a good idea to clean it by making this `true`. Default is `false`.
          required: false
          allowEmptyValue: false
          style: form
          explode: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: >-
            The synthesized audio contained in a Base64 encoded WAV file.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/synthesisResponseV1"
              example:
                  wav_64: >-
                    UklGRuTzAABXQVZFZm10IBAAAAABAAEAwF0AAIC7AAACABAAZGF0YcDzAADm/+b/m/
                    /k/+f/7/94\nAA8A4f/l/6f/PgA5ACQAGgDv/wwA5f9XAOj/0f8eAPD/BQDp/xgAv/
                    8eAAgA5/8NAPD/GAADADIA\nEAABAPb/JgAQACUAIgARACAAGAAGAAMADQAKABMAB
                    wAjABAAIwD7/wYADAAAAAwA+v8AAAAAGgAP\nAA0ADQD...
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 400
                  message: No voice found for voice-code 'eng-ZA-dnn-hal'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 401
                  message: No X-API-KEY in header
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 403
                  message: >-
                    Number of characters on account for given API
                    key have been depletedNo X-API-KEY in header
        '500':
          description:  Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 500
                  message: >-
                    TTS engine synthesis failed
    post:
      security:
        - QfrencyTTSApiKeyAuth: []
      tags:
        - Synthesis
      operationId: synthesizePostV1
      summary: Synthesize text
      description: >-
        Synthesize a given text string with a specific voice
        into speech with the given parameters.
      parameters:
        - name: X-API-Key
          in: header
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: >-
          Synthesize the given text with the given parameters. Note that only ```voice-code```
          and ```text``` are required, the other parameters are optional.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/synthesizeV1"
            example:
              voice-code: "eng-ZA-dnn-hal"
              text: >-
                I'm sorry, Dave. I'm afraid I can't do that.
              sample-rate: 16000
              auto-segmentation: true
              auto-clean: false
      responses:
        '200':
          description: >-
            The synthesized audio contained in a Base64 encoded WAV file.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/synthesisResponseV1"
              example:
                  wav_64: >-
                    UklGRuTzAABXQVZFZm10IBAAAAABAAEAwF0AAIC7AAACABAAZGF0YcDzAADm/+b/m/
                    /k/+f/7/94\nAA8A4f/l/6f/PgA5ACQAGgDv/wwA5f9XAOj/0f8eAPD/BQDp/xgAv/
                    8eAAgA5/8NAPD/GAADADIA\nEAABAPb/JgAQACUAIgARACAAGAAGAAMADQAKABMAB
                    wAjABAAIwD7/wYADAAAAAwA+v8AAAAAGgAP\nAA0ADQD...
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 400
                  message: No voice found for voice-code 'eng-ZA-dnn-hal'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 401
                  message: No X-API-KEY in header
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 403
                  message: >-
                    Number of characters on account for given API
                    key have been depletedNo X-API-KEY in header
        '500':
          description:  Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponseV1"
              example:
                error:
                  code: 500
                  message: >-
                    TTS engine synthesis failed
components:
  schemas:
    versions:
      type: object
      properties:
        versions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: >-
                  Version identifier.
              links:
                type: array
                items:
                  type: object
                  properties:
                    href:
                      type: string
                      description: >-
                        Version API hypertext reference.
                    rel:
                      type: string
                      description: >-
                        Relation to 'href'.
              status:
                type: string
                description: >-
                  Status of this API.
              updated:
                type: string
                description: >-
                  Date and time of the last update of this version in ISO 8601.
    voiceV1:
      type: object
      properties:
        age:
          type: string
          description: >-
            Age category.
        country-code:
          type: string
          description: >-
            Voice country code in ISO 3116.
        descriprion:
          type: string
          description: >-
            High level description of the voice.
        gender:
          type: string
          description: >-
            Voice gender.
        lang-code:
          type: string
          description: >-
            Voice language code in ISO 639-2.
        language:
          type: string
          description: >-
            Voice language as generaly known.
        name:
          type: string
          description: >-
            The given name of the voice.
        sample-rate:
          type: integer
          description: >-
            The native sample-rate of the voice, in Hertz.
        technique:
          type: string
          description: >-
            General voice synthesis technique.
        voice-code:
          type: string
          description: >-
            Unique code for voice use in API.
    voicesV1:
      oneOf:
        - $ref: '#/components/schemas/voiceV1'
        - type: array
          items:
            $ref: '#/components/schemas/voiceV1'
    accountV1:
      type: object
      properties:
        Account Info:
          type: object
          properties:
            AccountID:
              type: string
              format: uuid
              description: >-
                The account UUID.
            Name:
              type: string
              description: >-
                The name of the account.
            Email:
              type: string
              description: >-
                Email address of the account.
              format: email
            CharCountDNN:
              type: integer
              description: >-
                The number of characters that can be synthesized
                using DNN voices available on the account.
            CharCountHMM:
              type: integer
              description: >-
                The number of characters that can be synthesized
                using HMM voices on the account.
            API-Keys:
              type: array
              items:
                type: string
                format: uuid
                description: >-
                  API-Keys associated with this account.
    apiKeyV1:
      type: object
      properties:
        API-Key Info:
          type: object
          properties:
            API-Key:
              type: string
              format: uuid
              description: >-
                The API-Key UUID.
            Name:
              type: string
              description: >-
                The name of the API key.
            CharCountDNN:
              type: integer
              description: >-
                The number of characters that can be synthesized
                using DNN voices available on the API key.
            CharCountHMM:
              type: integer
              description: >-
                The number of characters that can be synthesized
                using HMM voices on the API key.
    synthesisResponseV1:
      type: object
      properties:
        wav_64:
          type: string
          description: >-
            The audio from the synthesis process. The audio is contained in a WAV (RIFF)
            file which has been Base64 encoded for transport.
          format: base64
    errorResponseV1:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              description: >-
                Error code.
            message:
              type: string
              description: >-
                Error message.
    synthesizeV1:
      type: object
      properties:
        voice-code:
          type: string
          description: >-
            The voice code of the voice to be used for synthesis,
            and by implication the also the language.
        text:
          type: string
          description: >-
            The text to be synthesized (in the language of the voice).
        sample-rate:
          type: integer
          format: int32
          minimum: 8000
          maximum: 32000
          default: Voice natural sample-rate
          description: >-
            The desired sample-rate of the resulting synthesized speech audio.
            Each voice has a natural sample rate, this will then be up- or down-sampled
            to the requested rate. The sample-rate must be given in Hertz.
            If left out then the synthesized audio sample-rate will be at the voice
            natural sample-rate.
        auto-segmentation:
          type: boolean
          default: true
          description: >-
            Automatically split the input text into sentences (if any sentance
            boundaries are found). Each sentence is then synthesized seperately
            and the resulting speech audio is concatenated with all the other
            sentence's speech audio and returned. Default is `true`. If the
            segmentation is wrong then switch this off and synthesize utterances one
            by one.
        auto-clean:
          type: boolean
          default: false
          description: >-
            Automatically clean the text. This involves many text processing operations
            to for example remove double new lines, replace escaped new lines etc. This
            might result in cleaner text for the TTS engine. If your text is from an unknown
            source then it is a good idea to clean it by making this `true`. Default is `false`.
  securitySchemes:
    QfrencyTTSApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    QfrencyTTSAccountKeyAuth:
      type: apiKey
      in: header
      name: X-ACCOUNT-KEY
